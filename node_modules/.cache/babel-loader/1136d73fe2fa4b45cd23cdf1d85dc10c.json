{"ast":null,"code":"var _jsxFileName = \"C:\\\\himansu(files and assignments)\\\\react from tutorial\\\\01-starting-setup\\\\src\\\\components\\\\Expense\\\\ExpenseChart.js\";\nimport React from \"react\";\nimport Chart from '../Chart/Chart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseChart = props => {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'May',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'Jul',\n    value: 0\n  }, {\n    label: 'Aus',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth(); //starting with 0 as jan => 0\n    chartDataPoints[expenseMonth].value += props.expense.amount;\n  }\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_c = ExpenseChart;\nexport default ExpenseChart;\nvar _c;\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","Chart","ExpenseChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["C:/himansu(files and assignments)/react from tutorial/01-starting-setup/src/components/Expense/ExpenseChart.js"],"sourcesContent":["import React from \"react\";\r\nimport Chart from '../Chart/Chart'\r\n\r\nconst ExpenseChart=(props)=>{\r\n    const chartDataPoints=[\r\n        {label:'Jan',value:0},\r\n        {label:'Feb',value:0},\r\n        {label:'Mar',value:0},\r\n        {label:'Apr',value:0},\r\n        {label:'May',value:0},\r\n        {label:'Jun',value:0},\r\n        {label:'Jul',value:0},\r\n        {label:'Aus',value:0},\r\n        {label:'Sep',value:0},\r\n        {label:'Oct',value:0},\r\n        {label:'Nov',value:0},\r\n        {label:'Dec',value:0},\r\n    ]\r\n\r\n    for(const expense of props.expenses)\r\n    {\r\n        const expenseMonth=expense.date.getMonth();//starting with 0 as jan => 0\r\n        chartDataPoints[expenseMonth].value += props.expense.amount;\r\n    }\r\n\r\n    return (\r\n        <Chart dataPoints={chartDataPoints}></Chart>\r\n    )\r\n}\r\n\r\nexport default ExpenseChart"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,gBAAgB;AAAA;AAElC,MAAMC,YAAY,GAAEC,KAAK,IAAG;EACxB,MAAMC,eAAe,GAAC,CAClB;IAACC,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,EACrB;IAACD,KAAK,EAAC,KAAK;IAACC,KAAK,EAAC;EAAC,CAAC,CACxB;EAED,KAAI,MAAMC,OAAO,IAAIJ,KAAK,CAACK,QAAQ,EACnC;IACI,MAAMC,YAAY,GAACF,OAAO,CAACG,IAAI,CAACC,QAAQ,EAAE,CAAC;IAC3CP,eAAe,CAACK,YAAY,CAAC,CAACH,KAAK,IAAIH,KAAK,CAACI,OAAO,CAACK,MAAM;EAC/D;EAEA,oBACI,QAAC,KAAK;IAAC,UAAU,EAAER;EAAgB;IAAA;IAAA;IAAA;EAAA,QAAS;AAEpD,CAAC;AAAA,KAzBKF,YAAY;AA2BlB,eAAeA,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module"}